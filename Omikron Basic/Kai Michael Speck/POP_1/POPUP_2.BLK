 ' POPUP Demo fÅr den FALCON - mit oder ohne  RCS
 ' Version 1.0 fÅr ST Computer - Februar '93
 ' (C) Kai Michael Speck, Solmser Weg 4, 6332 Ehringshausen
 ' Die Resourcen wurden mit dem INTERFACE-RCS erstellt

 LIBRARY Gem ,"GEM.LIB"' (* am Besten ab Version 3.0 *)
 LIBRARY Gem33 ,"GEM33.LIB"
 LIBRARY Popup ,"POPUP.LIB"
 LIBRARY Object ,"OBJECT.LIB"

 CLEAR FRE(0)-(64*1024)' (* Alles bis auf 64KB zurÅck ans GEMDOS *)

 Appl_Init' (* Programm anmelden *)

 {' (* ECHTE Konstanten *)
 COMPILER "DEF_CONST"
   ' (* GEMDefs - verbessert, aber nur ein Auszug *)
   Beg_Update%=1:End_Update%=0
   G_Box%=20:G_Boxtext%=22:G_Button%=26:G_String%=28
   None%=0:Selectable%=1:Default%=2:Exit%=4:Lastob%=$20:Touchexit%=$40
   Normal%=0:Checked%=4:Disabled%=8:Outlined%=$10:Shadowed%=$20:Draw3d%L=$80
   Te_Cntr%=2:Ibm%=3
   Fmd_Start%=0:Fmd_Grow%=1:Fmd_Shrink%=2:Fmd_Finish%=3
   R_Tree%=0
   Size_Of_Object%L=24:Ob_State%L=10:Ob_Spec%L=12
   ' (* RSC Definitionen *)
   Box_Ok%=2'  BUTTON in Baum Box_Tree
   Pop_1%=3:Pop_2%=4'  BOXTEXTe in Baum Box_Tree
   Textpop%=1:Textbox%=0'  Baum Textpop% mit BOX Textbox%
   Grafpop%=2:Grafbox%=0'  Baum Grafpop% mit BOX Grafbox%
 COMPILER "END_CONST"
 }

 Rsc

 Struct_Menu(Menu_Text%L,Textpop%L,0,4,1,0)
 Struct_Menu(Menu_Graf%L,Grafpop%L,0,3,0,0)

 Wind_Update(Beg_Update%)' (* Auf freien Bildschirm warten & sperren*)
   Form_Center(Box_Tree%L,X%L,Y%L,W%L,H%L)' (* Versagt immer noch bei Shadow-Boxen !! *)
   Form_Dial(Fmd_Start%,X%L,Y%L,W%L,H%L)
   Form_Dial(Fmd_Grow%,X%L,Y%L,W%L,H%L)
     REPEAT
       Objc_Draw(0,3,X%L,Y%L,W%L,H%L,Box_Tree%L)
       Form_Do(0,Box_Tree%L,Selected%)
       BIT (0,(Box_Tree%L+Selected%*Size_Of_Object%L+Ob_State%L+1))=0' (* Deselektieren *)
       SELECT Selected%
         CASE Pop_1%
           Popup(Menu_Text%L,Box_Tree%L,Pop_1%)
           EXIT
         CASE Pop_2%
           Objc_Offset(Pop_2%,Box_Tree%L,Pop_X%,Pop_Y%)
           Old%=FN Mn_Item%(Menu_Graf%L)
           Muster%=FN Popup%(Menu_Graf%L,Pop_X%,Pop_Y%)
           IF Muster% AND Old%<>Muster% THEN
             POKE LPEEK(Box_Tree%L+Size_Of_Object%L*Pop_2%+Ob_Spec%L)+19,(((Muster%-1) OR %1000) SHL 4) OR 1
             Objc_Draw(Pop_2%,1,Pop_X%,Pop_Y%,FN Ob_W%(Box_Tree%L,Pop_2%),FN Ob_H%(Box_Tree%L,Pop_2%),Box_Tree%L)
             Objc_Change(Old%,Normal%,Grafpop%L)
             Objc_Change(Muster%,Outlined%,Grafpop%L)
           ENDIF
           EXIT
       END_SELECT
     UNTIL Selected%=Box_Ok%
     Objc_Offset(0,Box_Tree%L,X%L,Y%L)' (* Damit schrumpft die Box bei Let 'em Fly an der richtigen Stelle ! *)
   Form_Dial(Fmd_Shrink%,X%L,Y%L,W%L,H%L)
   Form_Dial(Fmd_Finish%,X%L,Y%L,W%L,H%L)
 Wind_Update(End_Update%)

 Rsrc_Free' (* unbedingt den RSC-Speicher wieder freigeben *)

 Appl_Exit
 END

 DEF PROC Rsc
   LOCAL Ob%,Ret%L
   Rsrc_Load("POPUP.RSC",Ret%L)
   IF Ret%L THEN ' (* Original RSC-Datei vorhanden *)
     Rsrc_Gaddr(R_Tree%,Box%,Box_Tree%L)' (* Der Dialog*)
     Rsrc_Gaddr(R_Tree%,Textpop%,Textpop%L)' (* Das Textpopup *)
     Rsrc_Gaddr(R_Tree%,Grafpop%,Grafpop%L)' (* Das Grafikpopup *)
   ELSE ' (* Resourcen "zu Fuû" erzeugen *)
     Def_Ted(Ted_1%L,"Text","","",Ibm%,0,Te_Cntr%,$1180,0,-1,5,1)
     Def_Ted(Ted_2%L," Muster ","","",Ibm%,0,Te_Cntr%,$11B1,0,-1,9,1)
     Box_Tree%L= MEMORY(5*24):Adr%L=Box_Tree%L' (* Dialogbox *)
     Def_Ob(Adr%L,-1,1,Pop_2%,G_Box%,None%,Outlined%,$21130,0,0,$15,$B)
     Def_Ob(Adr%L,Box_Ok%,-1,-1,G_String%,None%,Normal%, MEMORY("FALCON POPUP DEMO"),2,1,$11,1)
     Def_Ob(Adr%L,Pop_1%,-1,-1,G_Button%+$200,Selectable%+Default%+Exit%,Draw3d%L, MEMORY("OK"),7,9,7,1)
     Def_Ob(Adr%L,Pop_2%,-1,-1,G_Boxtext% OR $200,Touchexit%,Shadowed%+Draw3d%L,Ted_1%L,5,3,$B,1)
     Def_Ob(Adr%L,0,-1,-1,G_Boxtext% OR $200,Lastob%+Touchexit%,Shadowed%+Draw3d%L,Ted_2%L,5,5,$B,2)
     FOR Ob%=0 TO 4
       Rsrc_Obfix(Ob%,Box_Tree%L)
     NEXT Ob%
     Textpop%L= MEMORY(9*24):Adr%L=Textpop%L' (* PopupmenÅ Text *)
     Def_Ob(Adr%L,-1,1,8,G_Box%,None%,Normal%,$FF1100,0,0,$B,8)
     Def_Ob(Adr%L,2,-1,-1,G_String%,None%,Normal%, MEMORY("  Dies     "),0,0,11,1)
     Def_Ob(Adr%L,3,-1,-1,G_String%,None%,Normal%, MEMORY("  ist      "),0,1,11,1)
     Def_Ob(Adr%L,4,-1,-1,G_String%,None%,Normal%, MEMORY("  ein      "),0,2,11,1)
     Def_Ob(Adr%L,5,-1,-1,G_String%,None%,Checked%, MEMORY("  Popup    "),0,3,11,1)
     Def_Ob(Adr%L,6,-1,-1,G_String%,None%,Normal%, MEMORY("  Demo     "),0,4,11,1)
     Def_Ob(Adr%L,7,-1,-1,G_String%,None%,Normal%, MEMORY("  fÅr      "),0,5,11,1)
     Def_Ob(Adr%L,8,-1,-1,G_String%,None%,Normal%, MEMORY("  den      "),0,6,11,1)
     Def_Ob(Adr%L,0,-1,-1,G_String%,Lastob%,Normal%, MEMORY("  FALCON   "),0,7,11,1)
     FOR Ob%=0 TO 8
       Rsrc_Obfix(Ob%,Textpop%L)
     NEXT Ob%
     Grafpop%L= MEMORY(9*24):Adr%L=Grafpop%L' (* PopupmenÅ Muster *)
     Def_Ob(Adr%L,-1,1,8,G_Box%,None%,Normal%,$FF1100,0,0,$F,5)
     Def_Ob(Adr%L,2,-1,-1,G_Box%,None%,Normal%,$FF1101,2,1,2,1)
     Def_Ob(Adr%L,3,-1,-1,G_Box%,None%,Normal%,$FF1111,5,1,2,1)
     Def_Ob(Adr%L,4,-1,-1,G_Box%,None%,Outlined%,$FF1121,8,1,2,1)
     Def_Ob(Adr%L,5,-1,-1,G_Box%,None%,Normal%,$FF1131,$B,1,2,1)
     Def_Ob(Adr%L,6,-1,-1,G_Box%,None%,Normal%,$FF1141,2,3,2,1)
     Def_Ob(Adr%L,7,-1,-1,G_Box%,None%,Normal%,$FF1151,5,3,2,1)
     Def_Ob(Adr%L,8,-1,-1,G_Box%,None%,Normal%,$FF1161,8,3,2,1)
     Def_Ob(Adr%L,0,-1,-1,G_Box%,Lastob%,Normal%,$FF1171,$B,3,2,1)
     FOR Ob%=0 TO 8
       Rsrc_Obfix(Ob%,Grafpop%L)
     NEXT Ob%
   ENDIF
 END_PROC
