 DEF PROC Object' (* obligatorische Definitionsprozedur *)
   PRINT
   PRINT "AES-OBJECT-Library V 1.0 (C) AZH '93"
   PRINT
 RETURN

 ' (* Zugriff auf Objektdaten *)

 DEF FN Ob_Type%(Tree%L,Ob%)= WPEEK(Tree%L+24*Ob%+6)
 DEF FN Ob_State%(Tree%L,Ob%)= WPEEK(Tree%L+24*Ob%+10)
 DEF FN Ob_Spec%L(Tree%L,Ob%)= LPEEK(Tree%L+24*Ob%+12)
 DEF FN Ob_W%(Tree%L,Ob%)= WPEEK(Tree%L+24*Ob%+20)
 DEF FN Ob_H%(Tree%L,Ob%)= WPEEK(Tree%L+24*Ob%+22)

 ' (* liefert Text des Objekts, falls dieses einen Text besitzt *)

 DEF FN Ob_Text$(Tree%L,Ob%)
   LOCAL Txt$=""
   LOCAL Txt_Ptr%L= LPEEK(FN Ob_Text_%L(Tree%L,Ob%))
   IF Txt_Ptr%L THEN
     WHILE PEEK(Txt_Ptr%L)
       Txt$=Txt$+ CHR$( PEEK(Txt_Ptr%L))
       Txt_Ptr%L=Txt_Ptr%L+1
     WEND
   ENDIF
 RETURN Txt$

 ' (* setzt Text des Objekts, falls m”glich - Textl„nge wird nicht beachtet *)

 DEF PROC Ob_Text(Tree%L,Ob%,Text$)
   LOCAL Txt_Ptr%L= MEMORY(Text$)
   LOCAL Ptr_Adr%L=FN Ob_Text_%L(Tree%L,Ob%)
   IF Ptr_Adr%L THEN LPOKE Ptr_Adr%L,Txt_Ptr%L
 RETURN

 ' (* Adresse (!) des Text-Zeigers, wenn vorhanden *)

 DEF FN Ob_Text_%L(Tree%L,Ob%)
   LOCAL Txt_Ptr%L=0
   LOCAL Type%=FN Ob_Type%(Tree%L,Ob%) AND $FF' (* nur LOW-Byte ! *)
   LOCAL Spec_Ptr%L=Tree%L+24*Ob%+12
   IF Type%=26 OR Type%=28 OR Type%=32 THEN Txt_Ptr%L=Spec_Ptr%L' (* Ob_Spec *)
   IF Type%=21 OR Type%=22 OR Type%=29 OR Type%=30 THEN Txt_Ptr%L= LPEEK(Spec_Ptr%L)
   IF Type%=31 OR Type%=33 THEN Txt_Ptr%L= LPEEK(Spec_Ptr%L)+8' (* G_Icon & G_Cicon *)
 RETURN Txt_Ptr%L

 ' (* Erstellen eines GEM-Objekts eines Baumes *)

 DEF PROC Def_Ob(R Adr%L,Next%,Head%,Tail%,Type%,Flags%,State%,Spec%L,X%,Y%,Width%,Height%)
   Def_Ob_(Adr%L,Next%,Head%,Tail%,Type%,Flags%,State%,Spec%L,X%,Y%,Width%,Height%)
   Adr%L=Adr%L+24
 RETURN

 ' (* Erstellen eines einzelnen GEM-Objektes *)

 DEF PROC Def_Ob_(Adr%L,Next%,Head%,Tail%,Type%,Flags%,State%,Spec%L,X%,Y%,Width%,Height%)
   WPOKE Adr%L,Next%
   WPOKE Adr%L+2,Head%
   WPOKE Adr%L+4,Tail%
   WPOKE Adr%L+6,Type%
   WPOKE Adr%L+8,Flags%
   WPOKE Adr%L+10,State%
   LPOKE Adr%L+12,Spec%L
   WPOKE Adr%L+16,X%
   WPOKE Adr%L+18,Y%
   WPOKE Adr%L+20,Width%
   WPOKE Adr%L+22,Height%
 RETURN

 ' (* Anlegen einer TEDINFO-Struktur *)

 DEF PROC Def_Ted(R Tedinfo%L,Ptext$,Ptmplt$,Pvalid$,Font%,Rsvd1%,Just%,Color%,Rsvd2%,Thickness%,Txtlen%,Tmplen%)
   Tedinfo%L= MEMORY(28)
   LPOKE Tedinfo%L, MEMORY(Ptext$)
   LPOKE Tedinfo%L+4, MEMORY(Ptmplt$)
   LPOKE Tedinfo%L+8, MEMORY(Pvalid$)
   WPOKE Tedinfo%L+12,Font%
   WPOKE Tedinfo%L+14,Rsvd1%
   WPOKE Tedinfo%L+16,Just%
   WPOKE Tedinfo%L+18,Color%
   WPOKE Tedinfo%L+20,Rsvd2%
   WPOKE Tedinfo%L+22,Thickness%
   WPOKE Tedinfo%L+24,Txtlen%
   WPOKE Tedinfo%L+26,Tmplen%
 RETURN
