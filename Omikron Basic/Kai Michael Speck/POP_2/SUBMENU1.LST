
 ' SUBMENö Demo fÅr den FALCON - ohne Verwendung eines RCS
 ' Version 1.0 fÅr ST Computer - Februar/Juni '93
 ' (C) Kai Michael Speck, Solmser Weg 4, 35630 Ehringshausen

 COMPILER "NO_EXCEPTIONS"' (* Multi TOS Kompatibel ! *)
 COMPILER "FLAGS 1; CUTLIB"' (* Fastload *)

 LIBRARY Gem ,"GEM.LIB"' (* Das Original - am Besten ab Version 3.0 *)
 LIBRARY Gem33 ,"GEM33.LIB"
 LIBRARY Popdef ,"POPDEF11.LIB"
 LIBRARY Popup ,"POPUP_11.LIB"
 LIBRARY Object ,"OBJECT.LIB"

 CLEAR FRE(0)-(64*1024)' (* Alles bis auf 64KB zurÅck ans GEMDOS *)

 Appl_Init' (* ACHTUNG kein echter Aufruf: *)

 Wind_Get(0,Wf_Workxywh%,Desk_X%,Desk_Y%,Desk_W%,Desk_H%)' (* Desktopgrîûe *)

 COMPILER "DEF_CONST"' (* Auszug aus den GEMDefs, als echte Konstanten *)
   Wf_Workxywh%=4
   Beg_Update%=1:End_Update%=0
   Normal%=0:Checked%=4:Disabled%=8
   Shadowed%=32
 COMPILER "END_CONST"

 Def_Pop' (* PopupmenÅ *)
   Pop_Entry("Info",P_Info%)
   Pop_Line
   Pop_Entry("Datei ",P_Datei%)
   Pop_Line
   Pop_Entry("Klicks: 0",P_Klicks%)
   Pop_Line
   Pop_Entry("Scrollen",P_Scroll%)
   Pop_Line
   Pop_Entry("Ende",P_Ende%)
 End_Pop(Pop_Ptr%L)

 Struct_Menu(Menu_Ptr%L,Pop_Ptr%L,0,5,0,0)' (* MENU-Struktur anlegen *)

 Def_Pop(Shadowed%)' (* SubmenÅ *)
   Pop_Entry("Neu",S_Neu%)
   Pop_Line
   Pop_Entry("Laden",S_Laden%)
   Pop_Entry("Sichern",S_Sichern%,Disabled%)
   Pop_Line
   Pop_Entry("Verwerfen",S_Verwerfen%,Disabled%)
 End_Pop(Sub_Ptr%L)

 Struct_Menu(Sub_Str%L,Sub_Ptr%L,0,5,0,0)' (* MENU-Struktur anlegen *)

 Menu_Attach(1,Pop_Ptr%L,P_Datei%,Sub_Str%L)' (* Verbindung herstellen *)
 Menu_Settings(6)' (* Scrollhîhe *)
 Struct_Menu(Ret_Ptr%L,0,0,0,0,0)' (* Leerstruktur fÅr das Ergebnis *)

 Form_Center(Pop_Ptr%L,Box_X%,Box_Y%,Box_W%,Box_H%)' (* Grîûe des Popup ermitteln *)

 REPEAT
   Pmx%= MIN(Desk_W%-Box_W%-1, MOUSEX )' (* Damit es nicht "raushÑngt" *)
   Wind_Update(Beg_Update%)' (* Auf freien Bildschirm warten & sperren*)
     Ok%=FN Popup%(Menu_Ptr%L,Pmx%, MOUSEY ,Ret_Ptr%L)
   Wind_Update(End_Update%)' (* Bildschirm wieder freigeben *)
   IF Ok% THEN ' (* wurde Åberhaupt etwas angewÑhlt ? *)
     P_Entry%=FN Mn_Item%(Ret_Ptr%L)' (* angewÑhlter Eintrag *)
     IF FN Mn_Tree%L(Ret_Ptr%L)=Pop_Ptr%L THEN ' (* Hauptpopup *)
       SELECT P_Entry%
         CASE P_Info%
           FORM_ALERT (1,"[0][| FALCON  SubmenÅ Demo   | fÅr ST Computer 8/93|    (C) AZH'93     ][OK]",Dummy%L)
           EXIT
         CASE P_Klicks%
           Klicks%L= VAL( RIGHT$(FN Ob_Text$(Pop_Ptr%L,P_Klicks%),2))
           Klicks%L=Klicks%L+1: IF Klicks%L>9 THEN Klicks%L=0
           Ob_Text(Pop_Ptr%L,P_Klicks%,"  Klicks:"+ STR$(Klicks%L))
           EXIT
         CASE P_Scroll%
           IF (FN Ob_State%(Pop_Ptr%L,P_Scroll%) AND Checked%)=Checked% THEN
             Objc_Change(P_Scroll%,Normal%,Pop_Ptr%L)
             Mn_Scroll(Menu_Ptr%L,0)' (* Scrollen aus *)
           ELSE
             Objc_Change(P_Scroll%,Checked%,Pop_Ptr%L)
             Mn_Scroll(Menu_Ptr%L,1)' (* Scrollen an *)
           ENDIF
           EXIT
       END_SELECT
     ELSE ' (* SubmenÅ *)
       SELECT P_Entry%
         CASE S_Neu% TO S_Laden%
           Objc_Change(S_Sichern%,Normal%,Sub_Ptr%L)
           Objc_Change(S_Verwerfen%,Normal%,Sub_Ptr%L)
           Objc_Change(S_Neu%,Disabled%,Sub_Ptr%L)
           Objc_Change(S_Laden%,Disabled%,Sub_Ptr%L)
           EXIT
         CASE S_Sichern% TO S_Verwerfen%
           Objc_Change(S_Neu%,Normal%,Sub_Ptr%L)
           Objc_Change(S_Laden%,Normal%,Sub_Ptr%L)
           Objc_Change(S_Sichern%,Disabled%,Sub_Ptr%L)
           Objc_Change(S_Verwerfen%,Disabled%,Sub_Ptr%L)
           EXIT
       END_SELECT
     ENDIF
   ENDIF
 UNTIL P_Entry%=P_Ende%

 Appl_Exit
 MOUSEON ' (* Wichtig fÅr Multi TOS *)
 END

