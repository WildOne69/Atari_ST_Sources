
 DEF PROC Popup' (* Definitionsprozedur *)
   PRINT
   PRINT "POPUP-MenÅ Library V 1.1 (C) AZH '93"
   PRINT
 RETURN

 ' (* Anlegen der neuen "MENU"-Struktur *)

 DEF PROC Struct_Menu(R Menu%L,Mn_Tree%L,Mn_Menu%,Mn_Item%,Mn_Scroll%,Mn_Keystate%)
   Menu%L= MEMORY(12)' (* Die neue "MENU" Struktur einrichten *)
   LPOKE Menu%L,Mn_Tree%L' (* Adresse des MenÅbaumes *)
   WPOKE Menu%L+4,Mn_Menu%' (* Index der die MenÅeintrÑge umfassenden Box *)
   WPOKE Menu%L+6,Mn_Item%' (* Der MenÅeintrag, der zuerst selktiert wird *)
   WPOKE Menu%L+8,Mn_Scroll%' (* Scrollen an oder aus *)
   WPOKE Menu%L+10,Mn_Keystate%' (* [CONTROL], [ALTERNATE] oder [SHIFT] *)
 RETURN

 ' (* Abfragen der durch das Betriebssystem verÑnderten EintrÑge *)

 DEF FN Mn_Tree%L(Menu%L)= LPEEK(Menu%L)
 DEF FN Mn_Item%(Menu%L)= WPEEK(Menu%L+6)
 DEF FN Mn_Scroll%(Menu%L)= WPEEK(Menu%L+8)
 DEF FN Mn_Keystate%(Menu%L)= WPEEK(Menu%L+10)

 ' (* Setzen einzelner EintrÑge *)

 DEF PROC Mn_Item(Menu%L,Item%)
   WPOKE Menu%L+6,Item%
 RETURN

 DEF PROC Mn_Scroll(Menu%L,Scroll%)
   WPOKE Menu%L+8,Scroll%
 RETURN

 ' (* Bearbeiten eines POPUP *)

 ' VollstÑndige Bearbeitung eines Textpopup bzgl. des Objekts Ob% im Baum Tree

 DEF PROC Popup(Pop_Str%L,Tree%L,Ob%)
   LOCAL Ob_Old%=FN Mn_Item%(Pop_Str%L)
   LOCAL Ob_Ofxoff%,Ob_Ofyoff%,Ob_New%
   Objc_Offset(Ob%,Tree%L,Ob_Ofxoff%,Ob_Ofyoff%)
   Ob_New%=FN Popup%(Pop_Str%L,Ob_Ofxoff%,Ob_Ofyoff%)
   IF Ob_New%<>Ob_Old% THEN
     Ob_Text(Tree%L,Ob%,FN Ob_Text$( LPEEK(Pop_Str%L),Ob_New%))
     Objc_Draw(Ob%,0,0,0, W_PIXEL , H_PIXEL ,Tree%L)
     Objc_Change(Ob_Old%,0, LPEEK(Pop_Str%L))
     Objc_Change(Ob_New%,4, LPEEK(Pop_Str%L))
   ENDIF
 RETURN

 ' Funktion; zeichnet Popup und liefert selektiertes Objekt zurÅck

 DEF FN Popup%(Menu_Str%L,X%,Y%)
   LOCAL Ret%=0
   Menu_Popup(Menu_Str%L,X%,Y%,Menu_Str%L)
   IF Intout%(0)=1 THEN Ret%=FN Mn_Item%(Menu_Str%L)
 RETURN Ret%

 ' Funktion; wie oben - aber fÅr Popups mit SubmenÅs

 DEF FN Popup%(Menu_Str%L,X%,Y%,Ret_Str%L)
   LOCAL Ret%=0
   Menu_Popup(Menu_Str%L,X%,Y%,Ret_Str%L)
   IF Intout%(0)=1 THEN Ret%=-1
 RETURN Ret%

 ' (* MENU_SETTINGS *)

 DEF PROC Menu_Settings(Me_Flag%,R Display%L,R Drag%L,R Delay%L,R Speed%L,R Height%)
   IF Mn_Set_%L=0 THEN Mn_Set_%L= MEMORY(18)
   IF Me_Flag%=1 THEN ' (* Werte setzen *)
     LPOKE Mn_Set_%L,Display%L
     LPOKE Mn_Set_%L+4,Drag%L
     LPOKE Mn_Set_%L+8,Delay%L
     LPOKE Mn_Set_%L+12,Speed%L
     WPOKE Mn_Set_%L+16,Height%
   ENDIF
   Menu_Settings(Me_Flag%,Mn_Set_%L)
   Display%L= LPEEK(Mn_Set_%L)
   Drag%L= LPEEK(Mn_Set_%L+4)
   Delay%L= LPEEK(Mn_Set_%L+8)
   Speed%L= LPEEK(Mn_Set_%L+12)
   Height%= WPEEK(Mn_Set_%L+16)
 RETURN

 ' (* setzen der Scrollhîhe *)

 DEF PROC Menu_Settings(Height%)
   LOCAL Display%L,Drag%L,Delay%L,Speed%L,Old%
   Menu_Settings(0,Display%L,Drag%L,Delay%L,Speed%L,Old%)
   Menu_Settings(1,Display%L,Drag%L,Delay%L,Speed%L,Height%)
 RETURN

 ' (* Abfragen der Scrollhîhe *)

 DEF FN Menu_Settings%
   LOCAL Dummy%L,Height%
   Menu_Settings(0,Dummy%L,Dummy%L,Dummy%L,Dummy%L,Height%)
 RETURN Height%

