		Notice to ST Developers

Question:  What's a 512x342 Mac screen got that a 640x400 ST screen hasn't?
Hint:      It's not square pixels, it's not less resolution.
Answer:    Lotsa fonts displayed on it!
Moral:     THE ST NEEDS PROPORTIONAL SPACING AND ON-SCREEN VARIETY OF FONTS!

Look at the Megaroids opening screen on a monochrome ST. It's ported from the 
Mac. The Mac's Chicago font looks great on the ST. The variety of
simultaneously displayed fonts adds to the charm.

A typical Mac screen looks typeSET; a typical ST screen looks typeWRITTEN. 
This difference is purely an issue of software. The ST has hardware/software
resources to generate superb screens. The VDI can manage several externally
supplied fonts AND accommodate proportional spacing.

The problem has been the inability to use vst_loadfonts() as documented in the 
ST Developer's Kit and the lack of tools to create/install proportionally
spaced fonts. A solution:

	~ a proportional space font editor FED.PRG (available now)
	~ some facts about interfacing fonts with GEM (FONTUSE.DOC)
	~ interface routines in source (FONTUSE.S)

As FONTUSE.DOC describes in detail, implementing externally supplied fonts on
the ST is quite easy to do under GEM. Once registered with the VDI, they can be
selected with vst_fonts(), then manipulated with the same resources that are
available to the system fonts (scaling, italicizing, justification, etc). Fonts
can be swapped in and out of memory at runtime with little effort and it
appears that available memory is the only limit to the number and size of fonts
that can be resident at one time!

These are the files:

	FED.PRG 	font editor v 3.7.86
	FED.DOC 	brief description of FED.PRG
	FONTUSE.DOC 	discussion of interfacing fonts w/GEM
	FONTUSE.S 	assembly source for routines to interface fonts w/GEM
	FONTUSE.O 	binary for above
	FEDFIX.C  	C source for utility to use with FED.PRG
	FEDFIX.TTP 	binary for above
