ReadMe for UniTerm V2.0b 017 <-| 
----------------------------   |
27.3.88                        |This number is displayed on the 
                                'About UniTerm...' dialog box and 
                                indicates the "Edit Number"

Changes 2.0a to 2.0b
--------------------

General:
  This version of UniTerm has a different setup file format, for
  once I've supplied a program that will update existing 2.0a
  setup files to 2.0b (20ATO20B.TOS).
  Please read the ReadMe for 2.0a too, since a LOT of things
  changed at the end of the life of 2.0a (Edit numbers go to 027).

Bugs fixed:

  Kermit: UniTerm now understands UniTerm (didn't work anymore
          after I introduced long packets).
  Terminal Emulation:
          VT52 cursor keys and PF1 to PF4 work again.

Other changes:

  -----
  Remote Macro commands can now be disabled (default!), an error
  message is displayed if this feature is used while turned off.
  -----
  Insert/Delete line is faster.
  -----
  Two additional fields added to the ParmBlock record:

                  PBClipSize     : Long_Integer;
                  {Current max size of clipboard}
                  PBClipRecAdr   : Long_Integer; 
                  {Pointer to clipboard record}

  PBClipRecAdr is really: ^ClipType with 
  
  ClipBuffer = Packed Array[1..$400000] Of Char; {If anybody needs more...}
  ClipBufferPtr = ^ClipBuffer;
  {ClipPtr = ^ClipType;}
  ClipType = Packed Record
                Len : Long_Integer;
                Buffer : ClipBufferPtr;
                {Next : ClipPtr; Not implemented (yet?)}
             End;
  
  One day this might be a linked list (but due to this organisation it will
  be compatible with older version).
  -----
  The size of the clipboard can now be set the same way as the other buffers.
  -----
  Shifted Keypad keys can now be used with KeyEdit.
  -----
  The delay time value (ASCII Filetransfer Parameters) is now used as a
  delay value for the InsertClip function and in the mouse cursor control.
  -----

Hope I haven't forgotten anything.

Incremental change list
-----------------------

V2.0b 002
---------

The scrolling routine accidently initialized the scrolled up line
to ASCII NUL instead of space.

V2.0b 003
---------

Fixed typo in default popup functions: a entry was 'F3' instead of 'F2'.
 
V2.0b 004
---------

Fixed bug in Kermit: the repeat character count went up to 95 instead
of 94, resulting in a hiccup on some Kermit's which don't like getting
a ASCII DEL (127=95+32).

V2.0b 005
---------

Workaround a GEM bug, if a popup menu was displayed on the left hand side
of the screen it would result in GEM goging crazy.

V2.0b 006
---------

The %INLINE macro command is now transparent for all characters except:
   <Control><C>, <BackSpace>, <Delete> and <Return>. 

V2.0b 007
---------

Fixed yet another bug in the new scrolling code. Reverse scroll is now
done in assembler too, ~more than 3 times faster as before.

V2.0b 008
---------

Reset the command state properly after a ESC Pu...ESC\ command.

V2.0b 009
---------

Fixed a VERY nasty bug in the routine that I use to erase parts of 
the screen (if called with zero width or height, instead of doing
nothing it would blow up).

V2.0b 010
---------

Reworked most of the X/YModem code (which was slightly historical).
Hopefully most bugs are gone now, in particular in YModem it doesn't
wait for an extra EOT anymore.

V2.0b 011
---------

Fixed a bug in the GIN cursor code, draw the cursor first and then set
the vector (caused problems with people with nervos fingers). Squezzed
a few more cycles out of the cursor drawing code.

Stop the cursor in Tek mode from blinking after the mouse has been used.

V2.0b 012
---------

In tek vector mode the new cursor position was calculated after every
byte, instead of every new vector. 

Enclosed the Pexec for TOS and TTP programs with a close_virtual_workstation,
open_virtual_workstation pair, this should make it much more robust (it
even works from the CCD/OSS Pascal Shell now). It does have the nasty
side effect of all VDI parameters getting stomped on.

Got rid of ALL OSS VDI bindings and did them myself.
 
V2.0b 014
---------

Added a option in the graphics dialog that allows you to change the scaling
so, that you see the topline of the text display.

Changed the replay function: the keyboard state is now only sampled every
20 bytes (one BIOS call takes ~0.1 ms (for the trivial ones), which was
rather a lot of overhead).

One the same note I've changed a lot of stuff in the main loop of UniTerm,
for character output without attributes and no scrolling the time used
for one loop is:

          0.3 ms + 0.18 ms + 0.4 ms * n
                              ^
                              0.1 RS232 read
                     ^        0.3 char output *
           ^       Cursor on and off if n <> 0 (0.1 ms for underline cursor)  
         ~0.2 ms keyboard (estimated, 2 BIOS calls)
          0.1 ms RS232 state (returns n max. 20)
     
* the raw character output rate is in fact ~7000 char/sec, but there is 
  naturally a lot of additional logic which takes time.

(it used to be: (0.2+0.1+0.1)ms + 0.25ms + (0.1+0.1+0.3)ms * n)


V2.0b 015
---------

Messing around with the Tek mode intoduced a bug in the GIN cursor code.

Tek 401X Incremental mode is now supported.

V2.0b 016
---------

Squezzed another 0.08 ms out of the main loop (in fact it would be trivial
to reduce it by another 0.08, if the kbshift variable would have been at a
documented location before the Blitter-TOS (if somebody knows a failsafe
way of finding the location.....)).

VT2XX for cursor control implemented:

   ESC [?25l   Disable cursor
   ESC [?25h   Enable cursor

if your application is sending large blocks of text to the terminal, it's
probably a good idea to disable the cursor first (see the timing info for
014).

V2.0b 017
---------

Fixed a typo in the dialer, if you tried to use the 'Access code' the
name of telephone number got sent instead of the number itsself.

The turning on/off of the history mechanism has changed:

     History recording off, avaialbe options:
      
         Start         Reset the buffer and enable history recording
         Resume        Enable history recording
         Cancel        Do nothing

     History recording on:

         Reset         Reset the buffer
         Suspend       Disable history recording
         Cancel        Do nothing

An additional 'LED' displays 'H', if history recording is on.

The statusline displays 'Printing' during the print textscreen command.


**************************************************************************

