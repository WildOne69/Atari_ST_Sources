' (c)1993 by MAXON-Computer
' Autor: Christoph Conrad
' Ermitteln der Adresse des GFA-internen
' GEMDOS-Handle-Arrays bei OPEN
' Sei adr% die Adresse des Handle-Arrays.
' Dann steht bei einem
' OPEN mode$,#i&,name$
' das GEMDOS-Handle als Byte an Adresse (adr%+i&)
' get_channel_adr am besten gleich am Programmanfang
' auf jeden Fall BEVOR
' irgendein File eroeffnet wird.
'
channel_adr%=@get_channel_adr
'
' Zur Demonstration mal ein paar Sachen oeffnen
OPEN "i",#1,"COM:"
OPEN "i",#2,"AUX:"
OPEN "i",#3,"PRN:"
OPEN "i",#88,"INIT.O"   ! Irgendein File
'               im aktuellen Verzeichnis einsetzen
'
PRINT "Gemdos-Filehandle COM: ";HEX$(@get_handle(1))
PRINT "Gemdos-Filehandle AUX: ";HEX$(@get_handle(2))  ! wie COM:
PRINT "Gemdos-Filehandle PRN: ";HEX$(@get_handle(3))
PRINT "Gemdos-Filehandle DIM.GFA: ";HEX$(@get_handle(88))
'
FUNCTION get_handle(channel&)
  ' channel&: wie bei OPEN mode$,#channel&,name$
  ' negative GEMDOS-Handles werden positiv zurueckgeliefert!!!
  $F%
  IF channel_adr%<>0
    RETURN BYTE{channel_adr%+channel&}
  ELSE
    RETURN 0
  ENDIF
ENDFUNC
'
FUNCTION get_channel_adr
  $F%
  LOCAL geta6%,pgeta6%,i&,a6%,adr%,offs|
  ' Register A6 holen
  LET geta6%=&H200E4E75  ! move.l a6,d0  // rts
  pgeta6%=V:geta6%
  a6%=C:pgeta6%()
  FOR i&=0 TO 79
    ' Bei COM: kein GEMDOS-Fopen!
    OPEN "i",#i&,"COM:"
  NEXT i&
  ' 4 KByte ab a6% nach 80 aufeinanderfolgenden &HFB absuchen...
  FOR adr%=a6% TO a6%+&H1000
    IF BYTE{adr%}=&HFB
      FOR offs|=1 TO 79
        EXIT IF BYTE{adr%+offs|}<>&HFB
      NEXT offs|
      IF offs|=80
        ' Erfolg!
        CLOSE
        RETURN adr%
      ENDIF
    ENDIF
  NEXT adr%
  ' Nichts gefunden...
  CLOSE
  RETURN 0
ENDFUNC

