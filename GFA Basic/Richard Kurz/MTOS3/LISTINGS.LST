---[ GETKEY.MNU ]----------------------------------------------

Datei
 Quit ?"[2][Wirklich beenden?][ Ja | Nein ]":011b:! 001b

Tasten
 "Pfeil nach oben"    4800  4800
 "Pfeil nach unten"   5000  5000
 "Pfeil nach links"   4b00  4b00
 "Pfeil nach rechts"  4d00  4d00
 ---
 Help         6200  6200
 Undo         6100  6100
 ---
 Alternate+A      1e00  1e00
 Alternate+B      3000  3000
 ---
 Control+Y        0019  0019
 Control+V        0016  0016
 ---
 "Ein Macro"      00010006 3200
 ---
 "Ein ganzer Satz + Return" "Dies ist ein Test"000d 1f00

Fragen
 "1 Button"  ?"[1][1 Button Test][ OK ]":"O" 7800
 "2 Buttons" ?"[1][2 Buttons Test][ A | B ]":"a":"b" 7900
 "3 Buttons" ?"[1][3 Buttons Test][ 1. | 2. | 3. ]":"1":"2":"3" 7a00
 Ja/Nein   ?"[3][Ja oder Nein?|Das ist...][ Ja | Nein ]":"ja":! 2400

Dateiauswahl
 "Voller Pfad"  @"Bitte wÑhlen"&P 
 "Nur Filename" @"Bitte wÑhlen"&F 
 "Mit Frage"  @"Bitte wÑhlen"?"[2][Voller Pfad?][Ja|Nein|Abbruch]":&P:&F:!

---[ GETKEY.C ]-------------------------------------------------

/* GETKEY.C, Pure C
 *
 * Gibt die fÅr MINIWIN nîtigen
 * Tastaturcodes aus!
 * Autor: Richard Kurz
 * (c) 1993 by MAXON
 */
 
#include <stdio.h>
#include <screen.h>
#include <string.h>

#define TRUE 1
#define FALSE 0

#define MAX_TAST 53

/* Daten fÅr die Sondertasten */
static struct
{
  int sc;
  int as;
  char t[30];
}stasten[MAX_TAST]=
{
  {0x1c,0x0d,"Return"},
  {0x72,0x0d,"Enter"},
  {0x01,0x1b,"Escape"},
  {0x53,0x7f,"Delete"},
  {0x0e,0x08,"Backspace"},
  {0x0f,0x09,"Tab"},
  {0x39,0x20,"Space"},
  {0x3b,0x00,"F1"},
  {0x3c,0x00,"F2"},
  {0x3d,0x00,"F3"},
  {0x3e,0x00,"F4"},
  {0x3f,0x00,"F5"},
  {0x40,0x00,"F6"},
  {0x41,0x00,"F7"},
  {0x42,0x00,"F8"},
  {0x43,0x00,"F9"},
  {0x44,0x00,"F10"},
  {0x54,0x00,"Shift+F1"},
  {0x55,0x00,"Shift+F2"},
  {0x56,0x00,"Shift+F3"},
  {0x57,0x00,"Shift+F4"},
  {0x58,0x00,"Shift+F5"},
  {0x59,0x00,"Shift+F6"},
  {0x5a,0x00,"Shift+F7"},
  {0x5b,0x00,"Shift+F8"},
  {0x5c,0x00,"Shift+F9"},
  {0x5d,0x00,"Shift+F10"},
  {0x62,0x00,"Help"},
  {0x61,0x00,"Undo"},
  {0x52,0x00,"Insert"},
  {0x47,0x00,"Clr/Home"},
  {0x48,0x00,"Pfeil nach oben"},
  {0x50,0x00,"Pfeil nach unten"},
  {0x4b,0x00,"Pfeil nach links"},
  {0x4d,0x00,"Pfeil nach rechts"},
  {0x48,0x38,"Shift+Pfeil nach oben"},
  {0x50,0x32,"Shift+Pfeil nach unten"},
  {0x4b,0x34,"Shift+Pfeil nach links"},
  {0x4d,0x36,"Shift+Pfeil nach rechts"},
  {0x73,0x00,"Control+Pfeil nach links"},
  {0x74,0x00,"Control+Pfeil nach rechts"},
  {0x78,0x00,"Alternate+1"},
  {0x79,0x00,"Alternate+2"},
  {0x7a,0x00,"Alternate+3"},
  {0x7b,0x00,"Alternate+4"},
  {0x7c,0x00,"Alternate+5"},
  {0x7d,0x00,"Alternate+6"},
  {0x7e,0x00,"Alternate+7"},
  {0x7f,0x00,"Alternate+8"},
  {0x80,0x00,"Alternate+9"},
  {0x81,0x00,"Alternate+0"},
  {0x82,0x00,"Alternate+û"},
  {0x83,0x00,"Alternate+'"},
};
  

char *get_name(int scan, int ascii)
/* Erzeugt den Namen fÅr eine Taste */
{
  static char t[30];
  KEYTAB *keys;
  int i;

  for(i=0;i<MAX_TAST;i++)
  {
    if(stasten[i].as==ascii &&
       stasten[i].sc==scan)
    {
      strcpy(t,stasten[i].t);
      return t;
    }
  }

  if(!ascii && scan<128)
  {
    keys=Keytbl((char *)-1,(char *)-1,(char *)-1);
    sprintf(t,"Alternate+%c",keys->shift[scan]);
  }
  else if(ascii<32)
    sprintf(t,"Control+%c\n",ascii+64);
  else if(ascii)
    sprintf(t,"%c",ascii);
  else
    strcpy(t,"Sondertaste???\n");
  return t;
}/* get_name */

char *to_hex(int scan, int ascii)
/* Generiert den Hexcode */
{
  static char t[30];
  int i;
  
  sprintf(t,"%4X",(scan<<8)+ascii);
  for(i=0;t[i];i++)if(t[i]==' ')t[i]='0';
  return t;
}/* to_hex */

int main(void)
/* Hier spielt die Musik */
{
  long taste; 
  int scan,ascii;
  
  Clear_home();
  puts("Taste drÅcken,");
  puts("Abbrechen mit Esc\n");

  do
  {
    taste=Crawcin();
    ascii=((unsigned char *)&taste)[3];
    scan=((unsigned char *)&taste)[1];
    printf("%s, ",to_hex(scan,ascii));
    printf("%s\n",get_name(scan,ascii));
  }while(ascii!=27);

  return 0;
}/* main */

---[ GETKEY.PRJ ]----------------------------------------------

; Pure C Projekt-Datei fÅr GETKEY

getkey.tos
=
pcstart.o
getkey.c
pcstdlib.lib
pctoslib.lib

---[ GETKEY.LST ]----------------------------------------------

' GETKEY.LST, GFA-BASIC 3.5
'
' Gibt die fÅr MINIWIN nîtigen
' Tastaturcodes aus!
' Autor: Richard Kurz
' (c) 1993 by MAXON
'
DEFINT "a-z"
@main
END
'
' Daten fÅr die Sondertasten
'
sondertasten:
DATA $1c,$0d,"Return"
DATA $72,$0d,"Enter"
DATA $01,$1b,"Escape"
DATA $53,$7f,"Delete"
DATA $0e,$08,"Backspace"
DATA $0f,$09,"Tab"
DATA $39,$20,"Space"
DATA $3b,$00,"F1"
DATA $3c,$00,"F2"
DATA $3d,$00,"F3"
DATA $3e,$00,"F4"
DATA $3f,$00,"F5"
DATA $40,$00,"F6"
DATA $41,$00,"F7"
DATA $42,$00,"F8"
DATA $43,$00,"F9"
DATA $44,$00,"F10"
DATA $54,$00,"Shift+F1"
DATA $55,$00,"Shift+F2"
DATA $56,$00,"Shift+F3"
DATA $57,$00,"Shift+F4"
DATA $58,$00,"Shift+F5"
DATA $59,$00,"Shift+F6"
DATA $5a,$00,"Shift+F7"
DATA $5b,$00,"Shift+F8"
DATA $5c,$00,"Shift+F9"
DATA $5d,$00,"Shift+F10"
DATA $62,$00,"Help"
DATA $61,$00,"Undo"
DATA $52,$00,"Insert"
DATA $47,$00,"Clr/Home"
DATA $48,$00,"Pfeil nach oben"
DATA $50,$00,"Pfeil nach unten"
DATA $4b,$00,"Pfeil nach links"
DATA $4d,$00,"Pfeil nach rechts"
DATA $48,$38,"Shift+Pfeil nach oben"
DATA $50,$32,"Shift+Pfeil nach unten"
DATA $4b,$34,"Shift+Pfeil nach links"
DATA $4d,$36,"Shift+Pfeil nach rechts"
DATA $73,$00,"Control+Pfeil nach links"
DATA $74,$00,"Control+Pfeil nach rechts"
DATA $78,$00,"Alternate+1"
DATA $79,$00,"Alternate+2"
DATA $7a,$00,"Alternate+3"
DATA $7b,$00,"Alternate+4"
DATA $7c,$00,"Alternate+5"
DATA $7d,$00,"Alternate+6"
DATA $7e,$00,"Alternate+7"
DATA $7f,$00,"Alternate+8"
DATA $80,$00,"Alternate+9"
DATA $81,$00,"Alternate+0"
DATA $82,$00,"Alternate+û"
DATA $83,$00,"Alternate+'"
DATA $00,$00,"Ende"
'
' Erzeugt den Namen zu einer Taste
'
FUNCTION get_name$(scan,ascii)
  LOCAL s,a,keys,t$
  RESTORE sondertasten
  '
  DO
    READ s,a,t$
    EXIT IF t$="Ende"
    IF s=scan AND a=ascii
      RETURN t$
    ENDIF
  LOOP
  '
  IF ascii=0 AND scan<128
    ' XBIOS Keytab
    keys=XBIOS(16,L:-1,L:-1,L:-1)
    keys=LPEEK(keys+4)
    t$="Alternate+"+CHR$(PEEK(keys+scan))
  ELSE IF ascii<32
    t$="Control+"+CHR$(ascii+64)
  ELSE IF ascii
    t$=CHR$(ascii)
  ELSE
    t$="Sondertaste???"
  ENDIF
  '
  RETURN t$
ENDFUNC
'
' Generiert den Miniwin-Hexcode
'
FUNCTION to_hex$(scan,ascii)
  LOCAL i,wert,t$
  '
  wert=SHL(scan,8)+ascii
  t$=HEX$(wert)
  i=LEN(t$)
  WHILE i<4
    t$="0"+t$
    INC i
  WEND
  RETURN t$
ENDFUNC
'
' Die Haupt-Procedure
'
PROCEDURE main
  LOCAL taste,scan,ascii
  '
  CLS
  PRINT "Taste drÅcken"
  PRINT "Abbrechen mit Esc"
  REPEAT
    ' GEMDOS Crawcin
    taste=GEMDOS(7)
    ascii=BYTE(taste)
    scan=BYTE(SHR(taste,16))
    PRINT @to_hex$(scan,ascii);", ";
    PRINT @get_name$(scan,ascii)
  UNTIL ascii=27
RETURN

