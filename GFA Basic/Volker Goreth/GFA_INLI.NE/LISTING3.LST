' ****************** LISTING 3 ******************
' *              Beispielprogramm               *
' *    -------------------------------------    *
' *    Sprache:  GFA-BASIC V3.x                 *
' *    Autor:    Volker Goreth, 4150 Krefeld    *
' *    Datum:    22.12.90                       *
' *    -------------------------------------    *
' *       (c) 1991 by MAXON Computer GmbH       *
' ***********************************************
'
'    Zeigt Bilder im DEGAS- und Screen-Format
'           - allerdings nur in HIRES.
'
'  Damit's auch laeuft: LISTING 1 & 2 ans Ende!
'
' Objekt-Indizes. Abhaengig von der Erstellungs-/
' bzw. Sortier-Reihenfolge andere Werte moeglich.
' Deshalb hier am besten Ihr original Namen-
' (*.LST-)File von RCS2 einfuegen:
LET dialog&=0           !RSC_TREE
LET pi3&=2              !Obj in #0
LET pic&=3              !Obj in #0
LET img&=4              !Obj in #0
LET cancel&=5           !Obj in #0
LET ok&=6               !Obj in #0
'
x_res&=WORK_OUT(0)+1    !X-Aufloesung
y_res&=WORK_OUT(1)+1    !Y-Aufloesung
' (siehe Listing 2: Procedure draw_tree!)
'
s_res&=XBIOS(4)         !Bildschirm-Aufloesung
DIM pic|(32066)         !Bild-Puffer
pic_adr%={*pic|()}+4    !Adresse dazu
scrn_adr%=XBIOS(3)      !Bildschirm-Adresse
'
' DAS RESOURCE-FILE EINBINDEN:
INLINE rsc_adr%,368
' >>> Die Konstante 'Anzahl' - hier 368 - ist <<<
' >>>   abhaengig von der RSC-File-Laenge!!!  <<<
'
' Interpreter oder Compiler?
interpreter!=(BYTE{BASEPAGE+256}=96)
' RSC-Pointer anpassen:
rsc!=FN rsrc_conv(rsc_adr%,interpreter!)
IF NOT rsc!             !Hat's nicht geklappt?
  ~FORM_ALERT(1,"[3][Fehler bei der RSC- |Daten-Umwandlung!][na sowas!]")
  END
ENDIF
'
' "*.PI3"=Default
'  - Baumadresse der Dialogbox "dialog&" holen:
~RSRC_GADDR(0,dialog&,obj_adr%)
'  - "*.PI3"-Button selectieren:
OB_STATE(obj_adr%,pi3&)=1
'  - File-Extender:
ext$="PI3"
'
' Das compilierte Programm mag's so lieber:
CLS
DEFMOUSE 0
'
'          ***** Hauptprogramm: *****
'    (Laeuft, bis "Abbruch" angeklickt wird)
DO
  ' Baum "dialog&" ausgeben:
  draw_tree(dialog&,3,cancel&,ok&,FALSE)
  '
  ' Maus und <RETURN>-Taste ueberwachen:
  REPEAT
    bno&=FORM_DO(obj_adr%,0)    !Button-Nr.
    '
    ' "*.PI3", "*.PIC" oder "*.IMG" angeklickt?
    SELECT bno&
    CASE pi3&
      ext$="PI3"
    CASE pic&
      ext$="PIC"
    CASE img&
      ext$="IMG"
    ENDSELECT
    '
    ' ... bis Abbruch- oder OK-Button angeklickt
    '  oder <RETURN>-Taste gedrueckt wird:
  UNTIL bno&=cancel& OR bno&=ok&
  '
  redraw_tree   !Weg mit dem Baum
  CLS           !... und der grauen Flaeche,
  '             ! die redraw hinterlaesst
  '
  EXIT IF bno&=cancel&  !"Abbruch" angeklickt
  '
  ' ... sonst Aktion gemaess Inhalt von ext$:
  SELECT ext$
  CASE "PI3"
    pic_load(34,ext$)
  CASE "PIC"
    pic_load(0,ext$)
  CASE "IMG"
    ~FORM_ALERT(1,"[1][Ohne Routine zum Entpacken |von *.IMG-Bildern geht's|nun mal nicht!][ naja... ]")
  ENDSELECT
  '
LOOP
'
'        ***** Unterprogramm(e): *****
'          (Nur des Beispiels wegen)
PROCEDURE pic_load(l.disp&,l.ext$)
  '    --> l.disp&   !zu ueberspringende Bytes
  '    --> l.ext$    !File-Extender (PI3/PIC/IMG)
  ' GLOBAL s_res&    !Bildschirm-Aufloesung
  '        pic_adr%  !Bild-Puffer-Adresse
  '        scrn_adr% !Video-Ram-Adresse
  LOCAL l.file$      !File-Name des Bildes
  '
  IF s_res&=2   !HIRES - oder etwa nicht?
    ' Sie haben die Wahl:
    FILESELECT "*."+l.ext$,"",l.file$
    IF EXIST(l.file$)
      ' Erst das Bild in den Puffer laden:
      BLOAD l.file$,pic_adr%
      ' ... und dann in den Bildschirm kopieren:
      BMOVE pic_adr%+l.disp&,scrn_adr%,32000
      ' Auf (Maus-)Tastendruck warten:
      REPEAT
      UNTIL MOUSEK OR INKEY$<>""
      REPEAT
      UNTIL MOUSEK=0
    ENDIF
  ELSE
    ~FORM_ALERT(1,"[1][Dieses Beispielprogramm|l„dt Bilder nur in HIRES! ][schon gut]")
  ENDIF
RETURN
'
'    !!! Hierhin gehoeren LISTING 1 und 2 !!!
