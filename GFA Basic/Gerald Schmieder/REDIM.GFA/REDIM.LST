' REDIM --- Redimensioniert beliebige eindimensionale Felder wahnsinnig schnell
' Autor : Gerald Schmieder   (c) MAXON Computer 1993
'
' Aufruf : Redim(*Feld(),Elemente%,Zurueck%)
'   Oder : Redim(Arrptr(Feld()),Elemente%,Zurueck%)
'        Feld = Name des Feldes plus Postfix. Klammern '()' nicht vergessen !
'   Elemente% = Anzahl der Elemente nach der Redimensionierung (wie DIM)
'    Zurueck% = RÅckgabewert. 0 => kein Fehler, sonst wie GFA-Fehlermeldungen
' ACHTUNG ! Beim ersten Aufruf (nach Programmstart oder nach jedem CLEAR)
' mit einem Stringfeld verbiegt REDIM den DATA-Zeilen-Zeiger !!!
PROCEDURE redim(ptr%,new%,VAR return%)
  LOCAL elements%,ram%,typ%,adr%
  IF new%>0                       ! Neue Arraygrenze nicht negativ ?
    IF {ptr%}<>0                  ! Gibt's das Feld Åberhaupt ?
      typ%=TYPE(ptr%)
      IF (typ%>3 AND typ%<8) OR typ%=12 OR typ%=13 !Zeigt der Pointer auf ein Feld ?
        IF WORD{ptr%+4}=1         ! Ist das Feld eindimensional ?
          elements%={{ptr%}}
          ram%=({{ptr%}-4})-12    ! Speicherverbrauch ohne Felddeskriptor
          IF FRE(0)>(ram%/elements%)*new%+524     ! Reicht der Speicher aus ?
            IF typ%=5             ! String-Feld
              INLINE change_backtrailer%,56
              IF LPEEK(change_backtrailer%)<>&H206F0004   ! Code installiert ?
                RESTORE change_back_data  ! Wenn nicht, Maschinencoderoutine
                FOR i%=0 TO 55            ! in den Speicher bringen
                  READ j%
                  POKE change_backtrailer%+i%,j%
                NEXT i%
                change_back_data:
                DATA 32,111,0,4,34,111,0,8,118,254,120,0,32,24,34,25,176,129,101,2,32
                DATA 1,36,88,180,196,103,22,50,24,52,1,82,66,196,67,37,137,32
                DATA 0,34,202,50,193,83,128,102,230,78,117,84,136,92,137,96,244
              ENDIF
              DIM hilfs__$(new%)
              VOID C:change_backtrailer%(L:{ptr%},L:{*hilfs__$()}) ! Verbiegt die Backtrailer und kopiert die Stringzeiger
              SWAP *ptr%,hilfs__$()  ! Nun wird endgÅltig vertauscht
              ERASE hilfs__$()
            ELSE
              SELECT typ%         ! Je nach Typ des Originalfeldes Hilfsfeld erzeugen und Zeiger dafÅr ermitteln
              CASE 4              ! Real-Array
                DIM hilfs__(new%)
                adr%={*hilfs__()}+4
              CASE 6              ! Integer-Array
                DIM hilfs__%(new%)
                adr%={*hilfs__%()}+4
              CASE 7
                DIM hilfs__!(new%)   ! Boolean-Array
                adr%={*hilfs__!()}+4
              CASE 12             ! Word-Array
                DIM hilfs__&(new%)
                adr%={*hilfs__&()}+4
              CASE 13             ! Byte-Array
                DIM hilfs__|(new%)
                adr%={*hilfs__|()}+4
              ENDSELECT
              IF new%<elements%   ! Wird das Feld grîûer oder kleiner redimensioniert ?
                BMOVE {ptr%}+4,adr%,{adr%-8}-12  ! Kleiner => kopiere soviel, wie ins neue Feld paût
              ELSE
                BMOVE {ptr%}+4,adr%,ram%   ! Grîûer => Verschiebe das ganze Feld
              ENDIF
              SELECT typ%      ! Nun je nach Originalfeld dieses und Hilfsfeld tauschen und Hilfsfeld lîschen
              CASE 4
                SWAP *ptr%,hilfs__()
                ERASE hilfs__()
              CASE 6
                SWAP *ptr%,hilfs__%()
                ERASE hilfs__%()
              CASE 7
                SWAP *ptr%,hilfs__!()
                ERASE hilfs__!()
              CASE 12
                SWAP *ptr%,hilfs__&()
                ERASE hilfs__&()
              CASE 13
                SWAP *ptr%,hilfs__|()
                ERASE hilfs__|()
              ENDSELECT
            ENDIF
            return%=0      ! Kein Fehler aufgetreten
          ELSE
            return%=8      ! Speicher voll
          ENDIF
        ELSE
          return%=28       ! Feld muû eindimensional sein
        ENDIF
      ELSE
        return%=64         ! Pointer falsch
      ENDIF
    ELSE
      return%=15           ! Feld nicht dimensioniert
    ENDIF
  ELSE
    return%=17             ! Dim zu groû (bei neg.Wert,macht GFA-Basic auch so!)
  ENDIF
RETURN
