' (c) MAXON Computer GmbH
FUNCTION speicher_frei(adr%)
  LOCAL back!,bitz%,startbit%,ltest%,rtest%,sbyte%
  LOCAL bitnr&,bitm%,radr%,ladr%,suchadr%,startadr%
  LOCAL bytes%,startbyte2%,ltest2%,bitnr2&
  SUB adr%,4
  bitm%={malloc_adr%+12}
  IF adr%<malloc_adr%+32 OR ODD(adr%)
    back!=FALSE
    RETURN back!
  ENDIF
  bytes%={adr%}
  ADD bytes%,4
  IF ROL(SHR(bytes%,4),4)<bytes%
    bytes%=ROL(SHR(bytes%,4),4)+16
  ENDIF
  IF adr%+bytes%>bitm%-15
    back!=FALSE
    RETURN back!
  ENDIF
  {adr%}=bytes%
  {malloc_adr%+8}={malloc_adr%+8}+{adr%}
  bitz%=SHR({adr%},4)
  startbit%=SHR(adr%-malloc_adr%,4)+1
  ltest%=startbit%-1
  ltest2%=startbit%-2
  rtest%=SHR(adr%+{adr%}-malloc_adr%,4)+1
  sbyte%=SHR(startbit%,3)
  IF ROL(SHR(startbit%,3),3)<startbit%
    INC sbyte%
  ENDIF
  bitnr&=ROL(sbyte%,3)-startbit%
  DEC sbyte%
  REPEAT
    IF bitz%>7 AND bitnr&=7
      BYTE{bitm%+sbyte%}=255
      SUB bitz%,8
      INC sbyte%
    ELSE
      BYTE{bitm%+sbyte%}=BSET(BYTE{bitm%+sbyte%},bitnr&)
      DEC bitz%
      DEC bitnr&
      IF bitnr&=-1
        INC sbyte%
        bitnr&=7
      ENDIF
    ENDIF
  UNTIL bitz%=0
  sbyte%=SHR(rtest%,3)
  IF ROL(SHR(rtest%,3),3)<rtest%
    INC sbyte%
  ENDIF
  bitnr&=ROL(sbyte%,3)-rtest%
  DEC sbyte%
  IF BTST(BYTE{bitm%+sbyte%},bitnr&)
    radr%=malloc_adr%+ROL(rtest%-1,4)
    {adr%}={adr%}+{radr%}
    startadr%=malloc_adr%
    REPEAT
      startadr%={startadr%+4}
    UNTIL {startadr%}={radr%}
    IF startadr%=radr%
      IF {radr%+12}=FALSE
        {{radr%+8}+4}={radr%+4}
        {{radr%+4}+8}={radr%+8}
      ELSE
        {{radr%+8}+4}={radr%+12}
        {{radr%+4}+8}={radr%+12}
        BMOVE radr%+4,{radr%+12}+4,8
      ENDIF
    ELSE
      DO
        EXIT IF {startadr%+12}=radr%
        startadr%={startadr%+12}
      LOOP
      {startadr%+12}={radr%+12}
    ENDIF
  ENDIF
  sbyte%=SHR(ltest%,3)
  IF ROL(SHR(ltest%,3),3)<ltest%
    INC sbyte%
  ENDIF
  bitnr&=ROL(sbyte%,3)-ltest%
  DEC sbyte%
  IF BTST(BYTE{bitm%+sbyte%},bitnr&)
    startbyte2%=SHR(ltest2%,3)
    IF ROL(SHR(ltest2%,3),3)<ltest2%
      INC startbyte2%
    ENDIF
    bitnr2&=ROL(startbyte2%,3)-ltest2%
    DEC startbyte2%
    IF BTST(BYTE{bitm%+startbyte2%},bitnr2&)
      ladr%={adr%-4}
    ELSE
      ladr%=adr%-16
    ENDIF
    startadr%=malloc_adr%
    REPEAT
      startadr%={startadr%+4}
    UNTIL {startadr%}={ladr%}
    IF startadr%=ladr%
      IF {ladr%+12}=FALSE
        {{ladr%+8}+4}={ladr%+4}
        {{ladr%+4}+8}={ladr%+8}
      ELSE
        {{ladr%+8}+4}={ladr%+12}
        {{ladr%+4}+8}={ladr%+12}
        BMOVE ladr%+4,{ladr%+12}+4,8
      ENDIF
    ELSE
      DO
        EXIT IF {startadr%+12}=ladr%
        startadr%={startadr%+12}
      LOOP
      {startadr%+12}={ladr%+12}
    ENDIF
    {ladr%}={ladr%}+{adr%}
    adr%=ladr%
  ENDIF
  IF {adr%}>16
    {{adr%}+adr%-4}=adr%
  ENDIF
  suchadr%=malloc_adr%
  REPEAT
    suchadr%={suchadr%+4}
  UNTIL {suchadr%}=>{adr%}
  IF {suchadr%}={adr%}
    {adr%+12}={suchadr%+12}
    {suchadr%+12}=adr%
  ELSE
    {adr%+4}=suchadr%
    {adr%+8}={suchadr%+8}
    {adr%+12}=FALSE
    {{adr%+8}+4}=adr%
    {{adr%+4}+8}=adr%
  ENDIF
  back!=TRUE
  RETURN back!
ENDFUNC
