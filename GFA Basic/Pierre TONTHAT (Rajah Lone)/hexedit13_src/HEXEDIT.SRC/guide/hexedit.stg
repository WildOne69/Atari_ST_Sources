@database "HexEdit"
@options "+g -i -s +z -t2 -d12"
@author "Rajah Lone"
@$VER: 1.3
@subject "HexEdit documentation"

@node "hexedit_start" "HexEdit: guide"

@image hexedit.img  2



                          Just another hexadecimal tool editor
                                     for Atari GEM environment
 
 @{"Generalities" LINK "hexedit_general"} and @{"Legal" LINK "hexedit_legal"}

 @{"Installation" LINK "hexedit_install"} 
 
 Use: @{"Viewport" LINK "hexedit_use1"}     
      @{"Open, Mount, Scan" LINK "hexedit_use2"} 
      @{"Edit, Block" LINK "hexedit_use3"}
      @{"Options" LINK "hexedit_preferences"} 
 
 @{"History" LINK "hexedit_versions"} 
 
 @{"Greetings" LINK "hexedit_greets"} 
  
@endnode

@node "hexedit_general" "HexEdit: generalities"

 I used an old French tool named "Discpac 1.2" for hexadecimal files views.
 
 Since this tool is not multitask friendly and has serious display issues
 on enhanced screenmodes, I got tired and started to develop a substitute.
 
 HexEdit supports:
 - files (up to 16 MB size)
 - floppy disk A or B contents
 - ST-RAM memory
 - ST-Cartridge and official TOS-ROM range addresses (view only)
  
@endnode

@node "hexedit_legal" "HexEdit: legals"

 This software is freeware. Its sources are provided for general knowlegde
 in the same archive. Adaptations and upgrades without the agreement of the
 author are permited. Monetizing on this work is forbidden.

 Attention : use this program at your own risk. Make copy if your precious
 files and floppy disk before using HexEdit on them.
 
 I deny any responsability of the usage of this software.
  
@endnode

@node "hexedit_install" "HexEdit: installation"

 Can be used as accessory: change its extension as ACC or ACX.
 Else, keep extension as APP or APX.
 
 The program needs HEXEDIT.RSC always besides.
 
@endnode

@node "hexedit_use1" "HexEdit: viewport"

 Viewport shows 256 bytes in the main window, with 3 columns.
 - offsets (from 0 to 0xFFFFFF = up to 16 MB)
 - hexdecimal view
 - ASCII view
 
 If screen has enough height, the viewport can be extended to 512 bytes,
 by selecting this option in the menu or the full widget of the window.
 
 Since 16 colors screenmodes, viewport can display zeros in grey color in
 the hexadecimal zone and nullbytes as grey dots in the ASCII zone.
 This display consumes CPU, it can be enabled and disabled as an @{"option" LINK "hexedit_preferences"}.
  
@endnode

@node "hexedit_use2" "HexEdit: open / mount / scan"

 ú @{0B}Open@{0} (file):

   On modern desktops, the file can be loaded with Drag'n'Drop. 
   Command line (ARGS) and VA_START are also supported.

   You can modify bytes on whole file and save changes before leaving it.


 ú @{0B}Mount@{0} (Floppy disk A or B):
 
   Disk geometry is read on bootsector. 
   Navigation though sectors, sides and tracks is made with buttons bar
   in Search/Navigate Window (^L or ^F). 512 bytes are loaded for each sector.
   
   By default, the Search/navigate window is opened and positioned at bottom
   according to the main window to help browsing on the disk.
   
   You can modify bytes only sector by sector (512 Bytes length). So saving
   is asked if you change viewed sector.


 ú @{0B}Scan@{0} (ST-RAM, ST-Cartridge, TOS-ROM):
  
   Not available if MiNT Memory Protection mode is enabled.
   
   ST-Cartridge and TOS-ROM scan availability is based on Cookie Jar detection.
   _MCH cookie value determines base-addresses and sizes for official machines.
   For old STF, _sysbase is read to determine if STE TOS is installed. 
   For new machines, fork/modify HexEdit source or contact me for a fix.
   
   These two modes are read-only (no change possible). 
   Reading may be crashy, ie no physical cartridge inserted to read.

   ST-RAM is displayed on 24 bits addresses, limited by phystop OS-variable.
   
   Due to frequent changes in programs' life, reading RAM may be not accurate.
   Use a debugger for realtime monitoring.
    
   Apply changes with care. This is reserved for wised and informed users.
   
   Saving changes may crash or crap your session and may need a power off
   for several seconds to reboot cleanly.
 
@endnode

@node "hexedit_use3" "HexEdit: edit / block"

 To exit edit or block mode, use Escape key.

 ú @{0B}Edit mode@{0}
 
  To enter edit mode: 
  - @{0U}left mouse click@{0} on Hexa area, then a full cursor will blink 
    (and underscore will blink at ASCII area).
  - use 0-9+A-F digits.
  OR
  - @{0U}left mouse click@{0} on ASCII area, then a full cursor will blink 
    (and underscore will blink at Hexa area).
  - use all kind of keys for ASCII for writing.

  Changes are displayed in the viewport but are not effective until you save.
 
  Before saving, you can revert part of changes using Undo (^Z) function.


 ú @{0B}Block mode@{0}
  
  To enter block mode, @{0U}edit mode must be activated first@{0} (for block
  start), or the block will start at position 0. 
  
  Undo (^Z) function is for edit mode only. You'll have an alert to save
  changes or discard them just before block selection is displayed.
   
  Then use @{0U}right mouse click@{0} on Hexa or ASCII area (for block end). 
  Block selection will be displayed in the Hexa area.
  Block functions are available in the menu and keys shortcuts.
   
   
  Are avaiable for all types of view (open file/mount floppies/scan memory):
   
  - Copy (^C): copy selected raw datas into the clipboard as SCRAP.BIN.
   
  - Export (^E) block into file. 
    Export format is choosen with the fileselected file extension.
    Can be *.HEX, *.ASM, *.C or *.H, otherwise it's raw datas.  
   
   
  Are only available for opened files (not for floopies nor memory scan):
   
  - Cut (^X): copy selected raw datas into the clipboard as SCRAP.BIN
              @{0U}and delete selection@{0}.
               
    If 'Insert' is checked, selection is removed, and file is shortened.
    Else 
    if 'Overwrite' is checked, selection is replaced by nullbytes.
  
  - Paste (^V) : paste from clipboard's SCRAP.BIN.
   
    If 'Insert' is checked, 
     - if it was edit mode, a new block is inserted at cursor location.
     - if it was block mode, a new block replaces the previous selection.
     - file size is thus changed.
    Else
    if 'Overwrite' is checked,
     - edit or block mode, a new block is overwrited since cursor location
       or block start.
     - file size is unchanged, the new block may be truncated to keep size.
       
  @{0B}Cut and paste on files are risky methods.@{0} For safety, a *.new and
  *.old (or .NNN if you keep versions) files are temporary created based on
  the opened file name, then names are swapped.
  
  If you want to keep changes, the .NNN files remain on the disk.
  
  This uses a lot of disk space. 
  For safety, do it on HD partition in a work/temp folder with few contents.
  
@endnode

@node "hexedit_preferences" "HexEdit: options"

 All preferences below are saved in HexEdit configuration file
 in $HOME folder. 
  

 ú 256 or 512 Bytes view.
 
   512 Bytes view is available only if screen has enough height.


 ú View nullbytes and zeros in grey.

   Since 16 color screenmodes. Disabling this feature speed up redraws.


 ú Insert/Overwrite.

   This is important for the Cut and Paste functions' behaviors.
 

 ú Keep versions.

   To be secure from mistakes in Cut and Paste functions on files, 
   you can keep previous versions of the modified file.
   
   They will be named FILENAME.000 to FILENAME.NNN for FILENAME.EXT.
   If using the file has long name (MagiC or MiNT), then names will be
   LONGFILENAME.EXT.000 to LONGFILENAME.EXT.NNN
   
   Keeping versions uses space. Using it on hard disk partition is advised.
 

 ú Enable or disable changes log.
  
   By default, the log file is u:\ram\hexedit.log under MiNT. 
   Else, HEXEDIT.LOG is writtent besides the program.
  
   The options are saved in the preferences file, in $HOME, with
   the log use flag and the log file path.
  
   If you change HexEdit location, if not MiNT, you may have to delete
   HEXEDIT.INF in $HOME or edit and fix the path.
   
@endnode

@node "hexedit_versions" "HexEdit: history"
 
 @{0B}1.3@{0}
 - add: view nullbytes and zeros in grey color (since 16 colors screenmodes),
        can be disabled in the menu, saved with the options.
 - add: TOS-ROM support (address/size based on _MCH Cookie, except MiNT_MP).
 - add: block selection.
 - mod: copy function for all content types, uses now clipboard's scrap.bin
        instead of exporting viewport to scrap.txt.
 - add: export function, for all content types, can format for *.HEX, *.ASM,
        *.C/H texts, otherwise saves to binary raw datas file.
 - add: cut and paste functions, for opened files only. Behavior depends on
        insert or overwrite option (saved in the preferences). File versions
        can be kept on disk (option also saved). 
 - fix: edit cursor was still displayed if 256/512 bytes page was changed.
 - fix: 3 bombs when reading at ST-Cartridge end (LPEEKing odd addresses). 

 @{0B}1.2@{0}
 - add: ST-RAM memory support (except under MiNT with Memory Protection).
 - add: ST-Cartridge support (0xFA0000-0xFBFFF read-only, except MiNT-MP).
 - add: missing search/goto function for floppy disk.
 - add: option for sensitive/insensitive case in ASCII search function. 
 - fix: extra Byte displayed at end (thanks JeanMars).
 - fix: lower memory consumption (MiNT's AES): no need of saved raster for
        internal menu redraws.
 - fix: lower memory consumption (MagiC and monoTOS) for saved raster for
        internal menu redraws.
 - fix: quicker menu bar redraw (MagiC and monoTOS).
 - fix: unwanted disabled items in menu bar (MagiC and monoTOS).
 - fix: not leaving just after 640*200 minimum screensize alert.
 - fix: limit view/edition of files up to 16 MB size, with alert.

 @{0B}1.1@{0}
 - add: 512 Bytes optional view (if screen height is enough),
        saved in preferences file.
 - add: Floppy disk support (^A, Mount...).
 - add: copy view contents (3 columns) to clipboard (^C),
        in ASCII colum, NULL, TAB, LF, CR are converted to SPACE.
 - add: Drag'n'Drop + VA_START + cmdline/ARGS.
 - fix: a to f keys missing for HEXA edition.
 - fix: history changes not cleared if 'ignored' before loading next file.
 - add: blinking underline on ASCII Byte if cursor blinking on HEXA Byte
        (and vice-versa).
 - add: 'Find next' in the menu (^G was already there).
 - fix: empty column at right for readability.
 - fix: vertical slider position.
 - fix: under monoTOS, without NVDI, internal menu bad shifting redraws.

 @{0B}1.0@{0}
 - first release, only for files.
 
@endnode

@node "hexedit_greets" "HexEdit: greetings"

  Thanks to:
  - The Atari V4SA and Apollo Team.
  - Jean-Marc Stocklausen aka Daroou
  - Lonny Pursell (GFA Basic and GBE)
 
@endnode
