' *** Drucker-Treiber ***
'
'    Ω 1989 Martin Fangmeyer
'           Wilmeresch 60
'           4430 Steinfurt 1
'
' *** Treiber einlesen ***
'
PROCEDURE load_printer(a$)                   ! Treiber laden
  LOCAL a%
  IF EXIST(a$)                               ! Datei da ?
    OPEN "I",#1,a$                           ! ja, îffnen
    IF INPUT$(7,#1)<>"Treiber"               ! Treiber-Kennung vorhanden ?
      ALERT 2,"Kein Drucker-Treiber !",1,"Weiter",a%   ! Nein => Fehler
    ELSE                                     ! Treiber o.k.
      drucker_type_$=INPUT$(20,#1)           ! Bezeichnung fÅr den Treiber
      a%=LEN(drucker_type_$)                 ! SPACE-Zeichen am Ende entfernen
      WHILE MID$(drucker_type_$,a%,1)=" " AND a%>0
        DEC a%
      WEND
      drucker_type_$=LEFT$(drucker_type_$,a%)
      '
      a%=INP(#1)                             ! LÑnge des Umlaute-Strings
      IF a%>0                                ! öberhaupt was da ?
        umlaute_$=INPUT$(a%,#1)              ! Ja, Umlaute lesen
        '
        zeichen_$=INPUT$(a%*11,#1)           ! Code-Tabellen lesen
      ENDIF
    ENDIF
    CLOSE #1                                 ! Datei schlieûen
  ELSE
    ALERT 2,"Drucker-Treiber|nicht gefunden !",1,"Weiter",a% ! Datei nicht da!
  ENDIF
RETURN
'
' *** Ersetzen der Umlaute durch die entsprechenden Codes ***
'
PROCEDURE lprint(a$,flag!)
  LOCAL a%,b%,c%
  IF umlaute_$<>""                          ! Treiber definiert ?
    a%=1                                    ! Ja, a$ vom ersten...
    WHILE a%<=LEN(a$)                       ! ...bis zum letzten Zeichen testen
      b%=INSTR(umlaute_$,MID$(a$,a%,1))     ! Aktuelles Zeichen in Tabelle ?
      IF b%>0                               ! Und ob!
        MUL b%,11                           ! Position der Ersatz-Codes
        SUB b%,10                           ! in zeichen_$ berechnen...
        c%=ASC(MID$(zeichen_$,b%))          ! Anzahl der Ersatz-Codes
        IF c%>0                             ! Was zu ersetzen ?
          INC b%                            ! Ja
          '
          ' Nun die Codes in den Original-String hineinpacken...
          '
          a$=LEFT$(a$,a%-1)+MID$(zeichen_$,b%,c%)+MID$(a$,a%+1)
          ADD a%,c%                         ! Suchposition in a$ erhîhen
        ELSE                                ! Kein Ersatz-Code definiert
          a$=LEFT$(a$,a%-1)+MID$(a$,a%+1)   ! => Zeichen lîschen
        ENDIF
      ELSE                                  ! Kein Umlaut
        INC a%                              ! => nÑchstes Zeichen prÅfen
      ENDIF
    WEND
  ENDIF
  IF flag!                                  ! Ausgabe mit Line-Feed ?
    LPRINT a$                               ! Nein!
  ELSE
    LPRINT a$;                              ! Doch
  ENDIF
RETURN                                      ! That's all...
