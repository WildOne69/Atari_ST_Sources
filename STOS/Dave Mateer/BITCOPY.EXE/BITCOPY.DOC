                    BITCOPY EXTENSION  
                    ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
                   by  Neil W. Stewart 
     
              shareware. copyright FLAIR 1991

          Document typed by Colin A. Watt of A.C.O.

Here is a small note from Neil (he who did bitcopy):

The bitcopy extension is a taster for the POWER-SCREEN extension
for STOS, which we hope will be a commercial piece of software
(but that depends on Mandarin, who we will contact soon about 
some help over the implementation of the extensions as we don't 
have any decent documentation). The POWER-SCREEN extension(if
it proves a popular idea amongst you lot out there (So, tell 
us if you liked bitcopy, and we will keep you posted about the 
final extension) will include things such as mega fast sprite 
routines (something STOS lacks badly), interrupt raster,palette 
splitting and border removal (!) routines, mega advanced versions 
of bitcopy which allows you to move screen memory using several 
logical functions. Bitcopy will also let you define several zones 
to copy to and from which will all be copied in one bitcopy 
command which will revolutionise STOS because we save so much 
time by avoiding FOR loops (which are very slow and sad in STOS).

   Have a look at the program file on the disk which shows you what 
can be done with only the new bitcopy routine which you get here.

Thank you all for your warmth and compassion and reading this 
advert !


BITPLANES
ÿÿÿÿÿÿÿÿÿ
First of all,for those of you who don't know how the ST screen 
display is set up I will include a short piece about it.

The ST screen display is made up of four 'BIT-PLANES' this is
rather like having four translucent pieces of plastic in front 
of each other.The sixteen colours are made by varying 
combinations of pixels set in each bit-plane for example:-
colour 1 is made by a pixel set in the 1st bit_plane
colour 2 by one in the 2nd
colour 3 is made by a combination of 1 & 2
colour 4 is one in the 3rd
colour 5 is one in the 3rd & 1st
colour 6 is one in the 3rd & 2nd
colour 7 is one in the 3rd , 2nd & 1st
colour 8 is one in the 4th

colours 9 - 15 are the same as 1 - 8 but with plane 4 set

obviously colour 0 is the background and has nothing set

for more information on bit-planes read :-

Herman Willey : The ST screen display- a new perspective
Jonathan Small : Bitplanes - a metaphysical breakdown
Alice Hats : A periodic history of multi-planar screen displays


BITCOPY -a foreword
ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
To fully understand the use of bitcopy first you have to know
one important thing about the STOS Screencopy.It copies 4 
planes and nothing else.This is fine in itself but 4 plane 
screencopies take a lot of time hence the need for something
faster ie a 1 or 2 or 3 plane screencopy.

That is exactly what bitcopy does.

GOOD POINTS
ÿÿÿÿÿÿÿÿÿÿÿ
As well as being fast it means that you could do seperate
graphics functions on seperate bitplanes eg. you could do
all of your sprites on plane 4 and your background on plane 1
this way they won't erase each other or flicker and you dont 
have to use a buffer to hold sprite back grounds

PROBLEMS
ÿÿÿÿÿÿÿÿ
The main problem is the fact that you have to engineer your 
palette so that you don't end up with a complete mess eg.

Imagine you have a picture which is drawn using colour 1
now if you copy a 1 plane image onto plane two,all the 
areas where the two images meet will be colour three.
The only eay around this would be to make colour three
either the same as colour 1 or the same as colour 2 
this has the disadvantage of limiting your palette


HOW BITCOPY WORKS
ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
The whole point of 'BITCOPY' was to produce a fast 
screencopy so,as a 3 plane bitcopy was almost as slow,
we decided not to bother

SYNTAX
ÿÿÿÿÿÿ

Bitcopy p,screen1,x1,y1,x2,y2,screen2,x,y

p can be either 1 or 2 ( for 1 & 2 planes )

screen 1 is the source screen

x1 & y1 are the top left hand co-ordinates of the source
rectangle
x2 & y2 are the bottom left hand co-ordinates

screen2 is the destination screen
x & y  are the co-ordinates of the top left hand corner on
the destination

This is almost exactly like screencopy except that you have
to specify a plane and there is a coma instead of ' to '

To get images to and from the 2nd 3rd & 4th planes
add 2 , 4 & 6 to the screen address

screen 1 & 2 must be start(x) where x is a bank number
or an absolute address

EXAMPLES
ÿÿÿÿÿÿÿÿ

bitcopy 1,physic,0,0,320,199,logic,0,0

this will copy the whole of physic to logic


bitcopy 2,start(5),0,0,160,100,start(5)+4,160,100

this will copy a rectangle in the first 2 planes to the 
bottom right of the last two planes

INSTALATION
ÿÿÿÿÿÿÿÿÿÿÿ
Drag the BITCOPY.EXN file into your STOS folder

UNFORTUNATELY
ÿÿÿÿÿÿÿÿÿÿÿÿÿ
At the moment we have a lack of information on extensions
so we unfortunately connot provide a COMPILER extension

HOPE
ÿÿÿÿ
We have however found a way around this for the meantime

PRGs
ÿÿÿÿ
On this disk are BITCOPY1.PRG & BITCOPY2.PRG
these are machine language programs which you call
from a basic program ,which do the same as bitcopy
but they work COMPILED
It is a bit of an annoyance but it is the best we can offer
at this moment

HOW?
ÿÿÿÿ
To use the PRGs you have to convert bitcopy instructions to
define registers and call them :-

first of all load either bitcopy1 or 2.prg into a memory bank
( 15 is recomended )
 
REGISTERS.the registers used are as follows

areg(0) screen 1
areg(1) screen 2

dreg(0) x1
dreg(1) y1
dreg(2) x2
dreg(3) y2

dreg(4) x
dreg(5) y

CONVERSION
ÿÿÿÿÿÿÿÿÿÿ
Set up variable MC :- MC=start(x)+28 ( where x is the bank no. )

OLD..  bitcopy1,physic,0,0,320,100,logic,0,5

NEW..  areg(0)=physic:areg(1)=logic:dreg(0)=0:dreg(1)=0:
       dreg(2)=320:dreg(3)=100:dreg(4)=0:dreg(5)=5:callmc





for further information or updates,write to

Colin A. Watt
14 LANRIG PLACE,
MUIRHEAD,
GLASGOW,
SCOTLAND,
G69 9AT

If you find this extension useful ( and I think you will )
Send œ5 or $10  to

Neil W. Stewart
52 CARDOWAN DRIVE,
STEPPS,
GLASGOW,
SCOTLAND,
G33 6HQ

Thank you

yours Colin a. Watt  from  A Clockwork Orange

LOOK OUT FOR
ÿÿÿÿÿÿÿÿÿÿÿÿ

THE 'CUNNING DEMOS' which is a stos demo written by FLAIR &
A Clockwork Orange.It uses BITCOPY in this form rather a lot.
It features around 40 screens and includes about 10 guest
screens from various STOS groups.It is absolutely Mega!
most of the screens run at 50hz with loads of movement and
it is as good as some older assembly demos.It has to be seen
to be believed.

THE 'Cor Blimey!' Demos which is another STOS mega demo.
Written predominantly by STORM it features guest screens 
from A Clockwork Orange and Rasterat among others.
